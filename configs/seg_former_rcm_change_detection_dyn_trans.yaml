seed_everything: true

trainer:
  accelerator: "gpu"
  devices: -1
  strategy:
    class_path: lightning.pytorch.strategies.DDPStrategy
    init_args:
      find_unused_parameters: false
      gradient_as_bucket_view: true
      static_graph: true
  gradient_clip_val: 1.0
  precision: "16-mixed"
  sync_batchnorm: true
  logger:
    class_path: lightning.pytorch.loggers.TensorBoardLogger
    init_args:
      save_dir: ./lightning_logs
      name: segformer_rcm_change_detection_dyn_A_Asc_Desc_mit_b3_1
#  logger:
#    class_path: lightning.pytorch.loggers.mlflow.MLFlowLogger
#    init_args:
#      save_dir: .mlflow/logs
#      log_model: all
#      experiment_name: "change_detection_AB_2"
#      run_name: "segformer_rcm_change_detection"
  callbacks:
    - class_path: lightning.pytorch.callbacks.EarlyStopping
      init_args:
        monitor: "val_loss"
        mode: "min"
        verbose: True
        patience: 20
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        dirpath: "./model_checkpoints"
        monitor: "val_loss"
        mode: "min"
        save_top_k: 5
        filename: "change_detection_segformer_dyn_mit_b3-A-ASC_DESC-{epoch:02d}-{val_loss:.3f}"
    - class_path: tools.callbacks.segmentation_visualization.VisualizationCallback
      init_args:
        max_samples: 3
  max_epochs: 100

model:
  class_path: tasks_with_models.change_detection_segformer.ChangeDetectionSegmentationSegformer
  init_args:
#    change_detection_model: "changeformer"
    image_size: [256,256]
    encoder: "mit_b3"
    use_dynamic_encoder: true
    in_channels: 15 #(5+1)x2+3 # Should be : len(band_names [+1 if BITMASK not included in band_names ] )X2 + 3
    weights: imagenet
    max_samples: 10
    num_classes: 1  # binary change detection
    loss:
      # class_path: loss.dice_bce_loss.DiceBCELoss
      class_path: segmentation_models_pytorch.losses.DiceLoss
      init_args:
        mode: "binary"
        #alpha: 0.5
        #smooth: 1e-6
        #eps: 1e-7
    optimizer:
      class_path: torch.optim.Adam
      init_args:
        lr: 6e-5
    scheduler:
      class_path: torch.optim.lr_scheduler.ReduceLROnPlateau
      init_args:
        mode: "min"
        factor: 0.1
        patience: 10
        cooldown: 1
        min_lr: 6e-8
    scheduler_config:
      interval: "epoch"
      frequency: 1
      monitor: "val_loss"
    class_labels: ["unburn", "burn"]
    class_colors: ["#000000", "#FF0000"]
    weights_from_checkpoint_path: /app/model_checkpoints/change_detection_segformer_mit_b3-A-DESC-epoch=99-val_loss=0.015.ckpt



data:
  class_path: datamodules.rcm_change_detection_one_output_datamodule.RcmChangeDetectionOneOutputDataModule
  init_args:
    batch_size: 16
    num_workers: 20
    data_type_max: 1
    patch_size:
    - 256
    - 256

    csv_root_folder: /mnt/data_disk/projet_RCM_scanfire
    patches_root_folder: /mnt/data_disk/projet_RCM_scanfire
    csv_file_name: pre_post_datasets_all.csv
    #csv_file_name: pre_post_datasets.csv
    split_ratios: [0.8, 0.1, 0.1]
    # band_names: [ 'LOCALINCANGLE', '']
    # band_names: [ 'LOCALINCANGLE', 'RL','RR' ] # RCM INPUT (non-polarimetric intensity)
    band_names: [ 'LOCALINCANGLE', 'PDN','PSN','PVN', 'S0' ] # MCHI-DECOMP ==> 5 bands
    # band_names: null # all bands
    #
    # band_names: [ 'M','RL','RR','S0','SP1','SP2','LOCALINCANGLE' ]
    # RCM bands AVAILABLE
    # -------------------
    #    BITMASK_CROPPED
    #    LOCALINCANGLE
    #    M
    #    NDSV     # strongly correlated with PVN
    #    PDN
    #    PSN
    #    PVN
    #    RFDI     #
    #    RL
    #    RR
    #    S0
    #    SP1
    #    SP2
    #    SP3

    beams:
    - 'A'
    #- 'B'
    #- 'C'  # AVAILABLE: ['A','B','C','D']
    satellite_pass:  # 'Descending'  # AVAILABLE: ['Ascending','Descending']
