seed_everything: true

trainer:
  accelerator: "cpu"
  devices: 1
  strategy: auto #ddp_spawn # ddp --> On Windows, use the ddp_spawn strategy instead of ddp in your config.
  precision: "16-mixed"
  sync_batchnorm: true
  logger:
    class_path: lightning.pytorch.loggers.mlflow.MLFlowLogger
    init_args:
      save_dir: C:\\temp\\change\mlruns
      log_model: all
      experiment_name: "gdl_experiment"
      run_name: "change_former_rcm"
  callbacks:
    - class_path: lightning.pytorch.callbacks.EarlyStopping
      init_args:
        monitor: "val_loss"
        mode: "min"
        verbose: False
        patience: 20
    - class_path: lightning.pytorch.callbacks.ModelCheckpoint
      init_args:
        monitor: "val_loss"
        mode: "min"
        save_top_k: 1
        filename: "model-{epoch:02d}-{val_loss:.3f}"
    - class_path: tools.callbacks.segmentation_visualization.VisualizationCallback
      init_args:
        max_samples: 3
  max_epochs: 10

model:
  class_path: tasks_with_models.change_detection_changeformer.ChangeDetectionChangeFormer
  init_args:
    change_detection_model: "changeformer"
    image_size: [256,256]
    # set to; it will be set to the number of band_names in the datamodule +
    # 1 for COMMON MASK
    # 1 for BITMASK
    # 1 for SAT_PASS encoding
    # 1 for BEAM encoding
    in_channels: 13 # Should be the length of data.band_names + 3
    max_samples: 6
    num_classes: 1  # binary change detection
    loss:
      class_path: loss.dice_bce_loss.DiceBCELoss
      init_args:
        ignore_index: 32767
        mode: "binary"
        alpha: 0.5
        smooth: 1e-6
        eps: 1e-7
    optimizer:
      class_path: torch.optim.Adam
      init_args:
        lr: 1e-4
    scheduler:
      class_path: torch.optim.lr_scheduler.ReduceLROnPlateau
      init_args:
        mode: "min"
        factor: 0.1
        patience: 10
        cooldown: 1
        min_lr: 1e-8
    scheduler_config:
      interval: "epoch"
      frequency: 1
      monitor: "val_loss"
    class_labels: ["unburn", "burn"]
    class_colors: ["#000000", "#FF0000"]
    weights_from_checkpoint_path: null


data:
  class_path: datamodules.rcm_change_detection_datamodule.RcmChangeDetectionDataModule
  init_args:
    batch_size: 4
    num_workers: 8
    data_type_max: 32767
    patch_size:
    - 256
    - 256

    csv_root_folder: C:\Users\xmalet\PycharmProjects\geo-deep-learning\data
    patches_root_folder: C:\Users\xmalet\PycharmProjects\geo-deep-learning\data\raw
    csv_file_name: pre_post_datasets.csv
    split_ratios: [0.7, 0.2, 0.1]
    band_names: [ 'M','LOCALINCANGLE','RL','RR','S0', 'SP1','SP2','SP3','RFDI' ]
    # RCM bands AVAILABLE
    #    BITMASK_CROPPED
    #    LOCALINCANGLE
    #    M
    #    NDSV
    #    PDN
    #    PSN
    #    PVN
    #    RFDI
    #    RL
    #    RR
    #    S0
    #    SP1
    #    SP2
    #    SP3

    beams:
    - 'A'  # AVAILABLE: ['A','B','C','D']
    satellite_pass: # 'Descending'  # AVAILABLE: ['Ascending','Descending']



ckpt_path: null
