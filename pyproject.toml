[project]
name = "geo-deep-learning"
version = "0.9.0"
requires-python = ">=3.12.0,<3.13"
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "lightning>=2.0.0",
    "torchmetrics>=1.0.0",
    "kornia>=0.7.0",
    "timm>=0.9.0",
    "segmentation-models-pytorch>=0.3.3",
    "webdataset>=0.2.0",
    "rasterio>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "mlflow>=2.0.0",
    "colorlog>=6.7.0",
    "PyYAML>=6.0",
    "jsonargparse[all]>=4.27.7",
    ]

[project.optional-dependencies]
cpu = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
]
cu128 = [
  "torch>=2.7.0",
  "torchvision>=0.22.0",
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cu128" },
  ],
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "cu128" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "cu128" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.ruff]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg",
    ".ipynb_checkpoints", ".mypy_cache", ".nox", ".pants.d", ".pyenv",
    ".pytest_cache", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    ".vscode", "__pypackages__", "_build", "buck-out", "build", "dist",
    "node_modules", "site-packages", "venv"
]
src = ["geo_deep_learning"]
line-length = 88
indent-width = 4
target-version = "py312"

# Enable full PEP 8 + modern checks
select = ["ALL"]
ignore = [
    "D203",  # conflicting docstring rules
    "D212",  # same, docstring starts on wrong line
    "ANN101", "ANN102",  # allow skipping `self`, `cls` annotations
    "EXE002", # ignore missing executable bit on scripts with shebangs
    "ERA001", # ignore commented out code
    "N806",   # ignore uppercase variables
    "TC002", "TC003" # allow imports in type annotations without TYPE_CHECKING
]

# You can limit to specific rule groups instead of ALL:
# select = ["E", "F", "W", "I", "N", "UP", "B", "C4", "SIM", "D", "PT"]

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
# Treat both the package and legacy alias names as first-party
known-first-party = [
  "geo_deep_learning",
  "tools",
  "models",
  "datasets",
  "datamodules",
  "tasks_with_models",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
